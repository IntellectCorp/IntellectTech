create table Users
(
	user_id int IDENTITY(101,1) primary key,
	username nvarchar(30) not null,
	password nvarchar(MAX) not null,
	role nvarchar(20) not null,
	account_act_date date
)

create table Applicant
(
	candidate_id int primary key references Users(user_id),
	name nvarchar(30) not null,
	email_id nvarchar(30) not null,
	contact_num nvarchar(15) not null,
	gender nvarchar(10) not null,
	dob date,
	address nvarchar(50),
	graduation nvarchar(MAX),
	post_graduation nvarchar(MAX)
)

create table Experience
(
	user_id int references Users(user_id),
	company nvarchar(30),
	designation nvarchar(30),
	period int
)

create table JobRole
(
	job_role_id int IDENTITY(1001,1) primary key,
	job_role nvarchar(30)
)

create table Job
(
	job_id int IDENTITY(2001,1) primary key,
	job_description nvarchar(MAX),
	job_role_id int references JobRole(job_role_id),
	skill_set nvarchar(MAX),
	vacancies int,
	min_experience int,
	max_experience int,
	age_limit int,
	posted_by int references Users(user_id)	
)

create table Qualification
(
	qualification_id int IDENTITY(501,1) primary key,
	qualification nvarchar(30),
	type nvarchar(10)
)

create table Staff
(
	staff_id int references Users(user_id),
	right_to_schedule bit,
	right_to_publish bit,
	right_to_post bit
)

create table Application
(
	app_id int IDENTITY(9001, 1) primary key,
	candidate_id int references Users(user_id),
	job_id int references Job(job_id),
	status_code int,
	status nvarchar(30),
	app_date date
)

create table Interview
(
	app_id int references Application(app_id),
	date date,
	time nvachar(20),
	venue nvarchar(20),
	interviewer int references Users(user_id),
	scheduled_by int references Users(user_id)
)

create table Results
(
	job_id int references Job(job_id),
	declaration_date date,
	num_of_candidates_selected int,
	candidates nvarchar(MAX),
	released_by int references Users(user_id)
)


