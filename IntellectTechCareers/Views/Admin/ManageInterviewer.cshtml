@model IntellectTechCareers.Models.InterviewerModel

@{
    ViewBag.Title = "Manage Interviewer";
    Layout = "~/Views/Shared/_LayoutPageManager.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#registrationSection").hide();
        $("#oldAccounts").show();
        $(".IsNew").change(function () {
            if ($("#IsNewNo").attr("checked")) {
                $("#registrationSection").hide();
                $("#oldAccounts").show();
                $("#UserName").val("");
                $("#Password").val("");
                $("#ConfirmPassword").val("");

            } else {
                $("#registrationSection").show();
                $("#oldAccounts").hide();
            }
        });
    });
</script>

<script type="text/javascript">
    var user_name_valid = "null";

    $(document).ready(function () {
        $("#UserName").change(function () {
            document.getElementById('yes').style.display = "none";
            document.getElementById('no').style.display = "none";
            user_name_valid = null;
        });
    });

    function validate_user_name() {
        //alert(user_name_valid);
        if (user_name_valid == "null") {
            document.getElementById('notification').innerHTML = "<h3><font color='red'>Please check if user name is available</font></h3>";
            return false;
        }
        else if (user_name_valid == "true") {
            document.getElementById('notification').innerHTML = "";
            return true;
        }
        else if (user_name_valid == "false") {
            document.getElementById('notification').innerHTML = "<h3><font color='red'>Entered user name is not available</font></h3>";
            return false;
        }
        else {
            document.getElementById('notification').innerHTML = "<h3><font color='red'>Please check if user name is available</font></h3>";
            return false;
        }
    }

    function check_user_name_avail() {

        var username = document.getElementById("UserName").value;
        if (username != "") {
            var serviceurl = "http://localhost:51124/UserNameValidation.svc/checkavailability?username=" + username;
            jQuery.support.cors = true;
            $.ajax({
                url: serviceurl,
                cache: false,
                type: "GET",
                async: false,
                dataType: "jsonp",
                success: function (data) {

                    var retval = JSON.parse(data);
                    if (retval["available"] == false) {
                        document.getElementById('yes').style.display = "none";
                        document.getElementById('no').style.display = "inline";
                        user_name_valid = "false";
                    }
                    else {
                        document.getElementById('yes').style.display = "inline";
                        document.getElementById('no').style.display = "none";
                        user_name_valid = "true";
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    debugger;
                    alert("Service Error");
                }
            });
        }
        else {
            document.getElementById('yes').style.display = "none";
            document.getElementById('no').style.display = "inline";
            user_name_valid = "false";
        }
    }

</script>

<h2>Manage Interviewer</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>InterviewerModel</legend>

        <div class="radio-label">
            @Html.Label("New Interviewer Account : ")
            @*@Html.RadioButton("AgeLimitYes", "Yes");
            @Html.RadioButton("AgeLimitNo", "No");*@
            <input class="IsNew" id="IsNewYes" type="radio" name="IsNew" value="IsNewYes">Yes
            <input class="IsNew" id="IsNewNo" type="radio" name="IsNew" value="IsNewNo" checked>No
        </div>
        <br />
        <div id="registrationSection">
            <div class="editor-label">
                @Html.LabelFor(model => model.UserName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.UserName)
                <img id="yes" src="~/Images/yes.png" height="25" width="25" style="padding-top: 10px; display: none;" />
                <img id="no" src="~/Images/no.gif" height="25" width="25" style="padding-top: 10px; display: none;" />

                &nbsp;
            <input type="button" onclick="check_user_name_avail()" value="Check availability" />

                @Html.ValidationMessageFor(model => model.UserName)

            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Password)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.ConfirmPassword)
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div id="oldAccounts">
            <div class="radio-label">
                @Html.LabelFor(model => model.SelectedInterviewer)
                @Html.DropDownListFor(model => model.SelectedInterviewer, new SelectList(Model.ListOfInterviewers))
            </div>
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.Jobs)
        </div>
        <div class="editor-field">
            @for (int i = 0; i < Model.Jobs.Count; i++)
            {
                @Html.HiddenFor(model => model.Jobs[i].JobId)
                @Html.HiddenFor(model => model.Jobs[i].JobDesc)
                @Html.HiddenFor(model => model.Jobs[i].Status)
                @Html.CheckBoxFor(model => model.Jobs[i].Checked, Model.Jobs[i].JobId)
                @Html.LabelFor(model => model.Jobs[i], Model.Jobs[i].JobDesc + "  ", new { @class = "checkbox" })
            }
            @Html.ValidationMessageFor(model => model.Jobs)
        </div>
        <p>
            <input type="submit" onclick="return validate_user_name()" value="Create" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
